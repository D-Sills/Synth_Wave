local audio_manager = require("scripts.modules.audio_manager")

function init(self)

	msg.post("main:/game_manager#scene_fader", "fade_in", {duration = 1, callback = true})
	self.start_button = gui.get_node("start_button/button")
    self.default_scale = gui.get_scale(self.start_button)
    self.hover_scale = vmath.vector3(0.4, 0.4, 1)
    --msg.post("main:/camera", "shake", { intensity = 0.05, duration = 2.5, direction = "both" })
    audio_manager.play_sound_effect("Voice/Welcome")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("fade_in_done") then
		msg.post(".", "acquire_input_focus")
       
        audio_manager.BPM = 125
        audio_manager.play_music("Music/TitleSong")
	end
	if message_id == hash("fade_out_done") then
    	print("splash screen done")
		msg.post("main:/collections#collection_manager", "load", {collection = "song_selection"})
		msg.post(".", "release_input_focus")
	end
end

local function start_game()
    -- Logic to execute when button is clicked
    print("Button clicked!")
    --audio_manager.stop_music(0.5)
    msg.post("main:/game_manager#scene_fader", "fade_out", {duration = 0.5, callback = true})
    
end

function on_input(self, action_id, action)
    if gui.pick_node(self.start_button, action.x, action.y) then
        if action.pressed and (action_id == hash("click") or action_id == hash("touch")) then
            -- Play click sound
            audio_manager.play_sound_effect("UI/Okay")
            
            -- Trigger button action
            start_game()

            -- Scale back to default when clicked
            gui.set_scale(self.start_button, self.hover_scale)
        elseif action.released then
            -- Scale up for hover effect
            gui.set_scale(self.start_button, self.default_scale)
        end
    else

    end
end


function update(self, dt)
	audio_manager.update(dt)
end
